<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
	http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.sprjjs</groupId>
    <artifactId>book-store</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <!-- 对所有jar版本号进行统一管理 -->
    <properties>
        <servlet-version>3.0.1</servlet-version>
        <jsp-version>2.2</jsp-version>
        <jstl-version>1.2</jstl-version>
        <tomcat-version>2.2</tomcat-version>
        <spring-version>4.3.4.RELEASE</spring-version>
        <springmvc-version>4.1.6.RELEASE</springmvc-version>
        <springjdbc-version>4.1.6.RELEASE</springjdbc-version>
        <aspectjweaver-version>1.8.6</aspectjweaver-version>
        <mybatis-version>3.2.7</mybatis-version>
        <mybatis-spring-version>1.2.3</mybatis-spring-version>
        <log4j-version>1.2.17</log4j-version>
        <mysql-connector-java-version>5.1.38</mysql-connector-java-version>
        <jackson-version>2.4.1</jackson-version>
        <commons-fileupload-version>1.3.1</commons-fileupload-version>
        <ftpclient-version>3.3</ftpclient-version>
        <json-simple-version>1.1</json-simple-version>
        <pageHelper-version>4.1.6</pageHelper-version>
        <httpClient-version>4.4.1</httpClient-version>
        <c3p0-version>0.9.5.5</c3p0-version>
        <junit-version>4.12</junit-version>
        <spring-test-version>4.2.4.RELEASE</spring-test-version>
        <hamcrest-library-version>1.3</hamcrest-library-version>
        <slf4j-api-version>1.7.5</slf4j-api-version>
        <slf4j-log4j12-version>1.7.12</slf4j-log4j12-version>
        <maven-compiler-plugin-version>3.6.1</maven-compiler-plugin-version>
    </properties>
    <!-- <dependencyManagement>相当于将所有依赖的jar设为私有型，子类不能继承<groupId>和<artifactId>，当版本号可以继承版本号 -->
    <!-- 该项目所依赖的jar -->
    <dependencies>
        <!-- servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet-version}</version>
            <!-- 表示只在编译期间起作用 -->
            <scope>provided</scope>
        </dependency>
        <!-- jsp-->
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${jsp-version}</version>
            <!-- 表示只在编译期间起作用 -->
            <scope>provided</scope>
        </dependency>
        <!-- jstl-->
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl-version}</version>
        </dependency>
        <!-- spring core -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <!-- springmvc -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${springmvc-version}</version>
        </dependency>
        <!-- spring jdbc -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${springjdbc-version}</version>
        </dependency>
        <!-- 切面 -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectjweaver-version}</version>
        </dependency>
        <!-- mybatis -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis-version}</version>
        </dependency>
        <!-- mybatis和spring整合 -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>${mybatis-spring-version}</version>
        </dependency>
        <!-- 记录日志所依赖的jar包 -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j-version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api-version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j-log4j12-version}</version>
        </dependency>
        <!-- mysql 驱动类 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java-version}</version>
        </dependency>
        <!-- jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-version}</version>
        </dependency>
        <!-- apache 图片上传 -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons-fileupload-version}</version>
        </dependency>
        <!-- ftpclient -->
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>${ftpclient-version}</version>
        </dependency>
        <!--json-simple-->
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>${json-simple-version}</version>
        </dependency>
        <!--分页插件  -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
            <version>${pageHelper-version}</version>
        </dependency>
        <!-- HttpClient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpClient-version}</version>
        </dependency>
        <!-- c3p0连接池-->
        <dependency>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
            <version>${c3p0-version}</version>
        </dependency>
        <!--spring整合junit -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring-test-version}</version>
            <scope>test</scope>
        </dependency>
        <!--junit  -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit-version}</version>
            <!-- 只作用于测试阶段，发布的时候不会加载此包 -->
            <scope>test</scope>
        </dependency>
        <!-- junit需要依赖该jar -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>${hamcrest-library-version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <!-- 添加tomcat插件 -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${tomcat-version}</version>
                <configuration>
                    <!-- 控制 tomcat 端口号 (80为默认端口号)-->
                    <port>80</port>
                    <!-- 项目发布到 tomcat 后的名称 -->
                    <!-- / 相当于把项目发布名称为 ROOT -->
                    <!-- /abc -->
                    <path>/</path>
                    <!--热部署 -->
                    <username>tomcat</username>
                    <password>tomcat</password>
                    <url>http://192.168.253.153/manager/text</url>
                </configuration>
            </plugin>
            <!-- maven单元测试编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!--maven编译插件,并控制jdk的版本为1.8-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin-version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <!-- <plugin>
            要将源码放上去，需要加入这个插件
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-source-plugin</artifactId>
              <version>2.1.2</version>
              <executions>
                  <execution>
                      <id>attach-sources</id>
                      <goals>
                          <goal>jar</goal>
                      </goals>
                  </execution>
              </executions>
          </plugin> -->
        </plugins>
        <!-- 资源拷贝插件，因为1.maven 默认只把 src/main/resources 里面的文件和
             src/main/java下的.java文件进行编译到 classes中,所以如果希望 src/main/java
             下的非.java文件也被编辑到 classes 中,就需要配置资源拷贝插件
         -->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/test/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>
        <!--使src/main/java和src/main/resorces编译到src/main/webapp/WEB-INF/classes路径下 -->
        <outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>
        <!--使src/test/java和src/test/resorces编译到src/test/webapp/WEB-INF/classes路径下 -->
        <testOutputDirectory>src/test/webapp/WEB-INF/classes</testOutputDirectory>
    </build>
    <!-- 将项目发布到私服-->
    <distributionManagement>
        <repository>
            <id>releases</id>
            <url>http://localhost:8091/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <url>http://localhost:8091/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
</project>